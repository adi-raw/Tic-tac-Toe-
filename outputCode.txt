import numpy as np

def print_board(board):
    for row in board:
        print(" | ".join(row))
        print("-" * 9)

def check_winner(board):
    for row in board:
        if np.all(row == 'X') or np.all(row == 'O'):
            return True
    for col in range(3):
        if np.all(board[:, col] == 'X') or np.all(board[:, col] == 'O'):
            return True
    if np.all(np.diag(board) == 'X') or np.all(np.diag(board) == 'O'):
        return True
    if np.all(np.diag(np.fliplr(board)) == 'X') or np.all(np.diag(np.fliplr(board)) == 'O'):
        return True
    return False

def tic_tac_toe():
    board = np.full((3, 3), ' ')
    current_player = 'X'
    for turn in range(9):
        print_board(board)
        row, col = map(int, input(f"Player {current_player}, enter your move (row and column): ").split())
        if board[row, col] == ' ':
            board[row, col] = current_player
            if check_winner(board):
                print_board(board)
                print(f"Player {current_player} wins!")
                return
            current_player = 'O' if current_player == 'X' else 'X'
        else:
            print("Invalid move, try again.")
    print_board(board)
    print("It's a draw!")

if __name__ == "__main__":
    tic_tac_toe()
